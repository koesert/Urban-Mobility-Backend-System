[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output and reporting
addopts =
    -v
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --color=yes
    -ra

# Markers for test categorization
markers =
    unit: Unit tests - isolated component testing
    integration: Integration tests - multiple components working together
    security: Security tests - testing access controls and data protection
    slow: Tests that may take longer to run (>1 second)
    encryption: Tests related to encryption functionality
    travelers: Tests related to travelers management
    auth: Tests related to authentication
    database: Tests that require database operations
    performance: Performance and load testing
    backup: Tests related to backup and restore functionality
    backup_unit: Unit tests for backup manager components
    backup_integration: Integration tests for backup workflows
    backup_security: Security tests for backup operations
    backup_menu: Tests for backup menu integration
    user_manager: Tests related to user management
    scooters: Tests related to scooter management
    menu: Tests related to menu systems and navigation
    rbac: Tests related to role-based access control
    validation: Tests related to input validation

# Test session configuration
minversion = 6.0

# Filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:requests.*
    ignore::pytest.PytestUnraisableExceptionWarning

# Timeout settings (if pytest-timeout is installed)
timeout = 300
timeout_method = thread

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage settings (if pytest-cov is installed) - commented out to avoid conflicts
# addopts =
#     --cov-branch
#     --cov-fail-under=80

# Parallel execution (if pytest-xdist is installed)
# addopts = -n auto

# JUnit XML output
# addopts = --junit-xml=test-results.xml

# HTML report (if pytest-html is installed)
# addopts = --html=report.html --self-contained-html

# Test collection settings
collect_ignore =
    tests/legacy
    tests/__pycache__
    */__pycache__